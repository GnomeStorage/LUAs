-- CONSTANTS
local Players = game:GetService("Players")
local Replicated = game:GetService("ReplicatedStorage")
local player = Players.LocalPlayer

-- GATHER ALL PET MODEL NAMES
local petModels = {}
if Replicated:FindFirstChild("Pets") then
    for _, mdl in ipairs(Replicated.Pets:GetChildren()) do
        petModels[mdl.Name:lower()] = true
    end
end

-- GUI Setup
local screenGui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
screenGui.Name = "PetMutatorUI"
screenGui.ResetOnSpawn = false

local mainFrame = Instance.new("Frame", screenGui)
mainFrame.Size = UDim2.new(0, 320, 0, 260)
mainFrame.Position = UDim2.new(0.5, -160, 0.3, 0)
mainFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
mainFrame.Active = true
mainFrame.Draggable = true
Instance.new("UICorner", mainFrame).CornerRadius = UDim.new(0,8)

local title = Instance.new("TextLabel", mainFrame)
title.Size = UDim2.new(1, 0, 0, 50)
title.Text = "Bacon Scripts\nPET MUTATOR"
title.Font, title.TextSize = Enum.Font.SourceSansBold, 20
title.TextColor3 = Color3.new(1,1,1)
title.BackgroundTransparency = 1

local mutateButton = Instance.new("TextButton", mainFrame)
mutateButton.Size = UDim2.new(1, -20, 0, 30)
mutateButton.Position = UDim2.new(0, 10, 0, 60)
mutateButton.Text = "Click to Mutate Pet"
mutateButton.Font, mutateButton.TextSize = Enum.Font.SourceSansBold, 18
mutateButton.BackgroundColor3 = Color3.fromRGB(90,90,90)
mutateButton.TextColor3 = Color3.new(1,1,1)

local dropdownLabel = Instance.new("TextLabel", mainFrame)
dropdownLabel.Size = UDim2.new(1, -20, 0, 25)
dropdownLabel.Position = UDim2.new(0, 10, 0, 100)
dropdownLabel.Text = "Selected: None"
dropdownLabel.Font, dropdownLabel.TextSize = Enum.Font.SourceSans, 16
dropdownLabel.TextColor3 = Color3.new(1,1,1)
dropdownLabel.BackgroundColor3 = Color3.fromRGB(60,60,60)

local scrollFrame = Instance.new("ScrollingFrame", mainFrame)
scrollFrame.Size = UDim2.new(1, -20, 0, 120)
scrollFrame.Position = UDim2.new(0, 10, 0, 130)
scrollFrame.CanvasSize = UDim2.new(0,0,0, #mutationList * 24)
scrollFrame.BackgroundColor3 = Color3.fromRGB(50,50,50)
scrollFrame.BorderSizePixel = 0
local uiList = Instance.new("UIListLayout", scrollFrame); uiList.Padding = UDim.new(0,2); uiList.FillDirection = Enum.FillDirection.Vertical

local statusLabel = Instance.new("TextLabel", mainFrame)
statusLabel.Size, statusLabel.Position = UDim2.new(1, -20, 0, 30), UDim2.new(0,10,0,255)
statusLabel.Text = "Status: Waiting..."
statusLabel.Font, statusLabel.TextSize = Enum.Font.SourceSans, 16
statusLabel.TextColor3 = Color3.new(1,1,1)
statusLabel.BackgroundTransparency = 1

-- Mutation Definitions
local mutationMap = {
    "Golden","Shiny","Rainbow","Mega","Tiny","Tranquil",
    "Corrupted","Inverted","Frozen","Windy","IronSkin",
    "Radiant","Shocked","Ascended"
}
local mutationData = { -- color map same as before }

-- Populate dropdown scroll
local selected = nil
for _, mut in ipairs(mutationMap) do
    local btn = Instance.new("TextButton", scrollFrame)
    btn.Size = UDim2.new(1, 0, 0, 24)
    btn.Text = mut
    btn.Font, btn.TextSize = Enum.Font.SourceSans, 16
    btn.BackgroundColor3 = Color3.fromRGB(80,80,80)
    btn.TextColor3 = Color3.new(1,1,1)
    btn.MouseButton1Click:Connect(function()
        selected = mut
        dropdownLabel.Text = "Selected: " .. mut
    end)
end

-- Held Pet Detection: Checks petModels table for model names under character
local function getHeldPet()
    local char = player.Character
    if not char then return nil end
    for _, obj in ipairs(char:GetChildren()) do
        if obj:IsA("Model") and obj:FindFirstChildWhichIsA("BasePart") then
            local lname = obj.Name:lower()
            if petModels[lname] then
                return obj
            end
        end
    end
    return nil
end

-- Mutation logic
mutateButton.MouseButton1Click:Connect(function()
    local pet = getHeldPet()
    if not pet then
        statusLabel.Text = "Status: No pet held!"
        return
    end
    if not selected then
        statusLabel.Text = "Status: No mutation selected!"
        return
    end
    local data = mutationData[selected]
    if data then
        pet.Name = data.Prefix .. pet.Name:gsub("^%w+ ", "")
        for _,p in ipairs(pet:GetDescendants()) do
            if p:IsA("BasePart") then p.Color = data.Color; p.Material = Enum.Material.Metal end
        end
        statusLabel.Text = "Status: Applied " .. selected
    end
end)

-- Update if pet held changes
game:GetService("RunService").Heartbeat:Connect(function()
    local pet = getHeldPet()
    if pet then statusLabel.Text = "Status: Holding pet: " .. pet.Name end
end)
