-- Create a simple UI and Scale Held Pet Script (Mobile & Executor Compatible)

local scale = 3  -- Scaling factor

-- Create UI
local player = game.Players.LocalPlayer
local gui = player:WaitForChild("PlayerGui")

local screenGui = Instance.new("ScreenGui")
screenGui.Parent = gui

local button = Instance.new("TextButton")
button.Parent = screenGui
button.Size = UDim2.new(0, 250, 0, 50)
button.Position = UDim2.new(0.5, -125, 0.5, -25)
button.BackgroundColor3 = Color3.fromRGB(0, 120, 255)
button.Text = "Enlarge Pet"
button.TextSize = 24
button.TextColor3 = Color3.fromRGB(255, 255, 255)

-- Function to enlarge the held pet
local function enlargeHeldPet()
    local character = player.Character or player.CharacterAdded:Wait()
    local rightHand = character:FindFirstChild("RightHand")
    local leftHand = character:FindFirstChild("LeftHand")

    local heldPet = nil

    -- Look for the pet in either RightHand or LeftHand
    if rightHand and rightHand:FindFirstChild("Pet") then
        heldPet = rightHand.Pet
    elseif leftHand and leftHand:FindFirstChild("Pet") then
        heldPet = leftHand.Pet
    end

    if not heldPet then
        print("No pet is being held.")
        return
    end

    -- Make sure the pet has a PrimaryPart before scaling
    if not heldPet.PrimaryPart then
        print("The pet doesn't have a PrimaryPart.")
        return
    end

    -- Scale the pet
    if heldPet:IsA("Model") then
        for _, part in ipairs(heldPet:GetDescendants()) do
            if part:IsA("BasePart") then
                part.Size = part.Size * scale
            elseif part:IsA("SpecialMesh") then
                part.Scale = part.Scale * scale
            end
        end

        -- Ensure the PrimaryPart's position is updated after scaling
        heldPet:SetPrimaryPartCFrame(heldPet.PrimaryPart.CFrame)
        print("Pet enlarged!")
    end
end

-- Button click event
button.MouseButton1Click:Connect(enlargeHeldPet)
