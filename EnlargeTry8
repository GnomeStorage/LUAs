-- Mobile and Executor Compatible: Enlarge Held Pet UI Script

local scale = 3  -- Scaling factor for enlarging the pet

-- Ensure PlayerGui exists
local player = game.Players.LocalPlayer
local gui = player:WaitForChild("PlayerGui")

-- Create ScreenGui to hold the UI
local sGui = Instance.new("ScreenGui", gui)
sGui.Name = "PetEnlargerUI"
sGui.ResetOnSpawn = false

-- Create Frame for the button
local frame = Instance.new("Frame", sGui)
frame.Size = UDim2.new(0, 250, 0, 100)
frame.Position = UDim2.new(0.5, -125, 0.5, -50)
frame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
frame.AnchorPoint = Vector2.new(0.5, 0.5)

-- Create "Enlarge Pet" button
local button = Instance.new("TextButton", frame)
button.Size = UDim2.new(1, -20, 0, 50)
button.Position = UDim2.new(0, 10, 0.5, -25)
button.Text = "Enlarge Pet"
button.TextSize = 24
button.Font = Enum.Font.GothamBold
button.TextColor3 = Color3.new(1, 1, 1)
button.BackgroundColor3 = Color3.fromRGB(0, 120, 255)

-- Function to enlarge the held pet
local function enlargePet()
    -- Ensure the player's character is loaded
    local character = player.Character or player.CharacterAdded:Wait()

    -- Check for RightHand or LeftHand
    local rightHand = character:FindFirstChild("RightHand")
    local leftHand = character:FindFirstChild("LeftHand")

    local heldPet = nil

    -- Look for a pet in RightHand or LeftHand
    if rightHand and rightHand:FindFirstChild("Pet") then
        heldPet = rightHand.Pet
    elseif leftHand and leftHand:FindFirstChild("Pet") then
        heldPet = leftHand.Pet
    end

    -- If no pet is held, return and print a message
    if not heldPet then
        print("No pet is being held.")
        return
    end

    -- Ensure the pet has a PrimaryPart (essential for scaling)
    if not heldPet.PrimaryPart then
        print("Held pet doesn't have a PrimaryPart.")
        return
    end

    -- Scale the pet
    if heldPet:IsA("Model") then
        for _, part in ipairs(heldPet:GetDescendants()) do
            if part:IsA("BasePart") then
                -- Scale size and adjust position to avoid clipping
                part.Size = part.Size * scale
                part.Position = part.Position * 1.1  -- Slightly adjust position
            elseif part:IsA("SpecialMesh") then
                part.Scale = part.Scale * scale
            end
        end

        -- Update the PrimaryPart's position after scaling
        heldPet:SetPrimaryPartCFrame(heldPet.PrimaryPart.CFrame)
        print("Pet enlarged!")
    else
        print("Held object is not a pet model.")
    end
end

-- Connect the button to enlarge the pet when clicked or tapped
button.MouseButton1Click:Connect(enlargePet)
