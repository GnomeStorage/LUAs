-- Simple Pet Enlarger UI
-- Only scales held pets (no corruption effects)
-- Compatible with Delta/Krnl/Synapse

if not game:IsLoaded() then game.Loaded:Wait() end
local Players = game:GetService("Players")
local Player = Players.LocalPlayer
local Character = Player.Character or Player.CharacterAdded:Wait()
local TweenService = game:GetService("TweenService")

-- Create minimal UI
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "SimplePetEnlarger"
ScreenGui.Parent = game:GetService("CoreGui")

local MainFrame = Instance.new("Frame")
MainFrame.Size = UDim2.new(0, 150, 0, 60)
MainFrame.Position = UDim2.new(0.8, 0, 0.8, 0)
MainFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 30)
MainFrame.BorderSizePixel = 0
MainFrame.Parent = ScreenGui

local EnlargeButton = Instance.new("TextButton")
EnlargeButton.Size = UDim2.new(0.9, 0, 0.7, 0)
EnlargeButton.Position = UDim2.new(0.05, 0, 0.15, 0)
EnlargeButton.BackgroundColor3 = Color3.fromRGB(0, 150, 150)
EnlargeButton.TextColor3 = Color3.new(1, 1, 1)
EnlargeButton.Font = Enum.Font.SciFi
EnlargeButton.TextSize = 18
EnlargeButton.Text = "ENLARGE"
EnlargeButton.Parent = MainFrame

-- Store original sizes
local originalSizes = {}

local function enlargeHeldPet()
    -- Find held pet
    local heldPet = nil
    for _, tool in ipairs(Character:GetChildren()) do
        if tool:IsA("Tool") and tool:FindFirstChild("Handle") then
            heldPet = tool
            break
        end
    end

    if not heldPet then
        EnlargeButton.Text = "NO PET HELD"
        task.wait(1.5)
        EnlargeButton.Text = "ENLARGE"
        return
    end

    -- Clear previous sizes
    originalSizes = {}

    -- Store original sizes and scale up
    for _, part in ipairs(heldPet:GetDescendants()) do
        if part:IsA("BasePart") then
            originalSizes[part] = part.Size
            
            -- Different scaling for different body parts (like your raccoon reference)
            local scaleMultiplier = 1.8 -- Base scale
            
            if part.Name:lower():find("head") or part.Name:lower():find("torso") then
                scaleMultiplier = 2.0 -- Head/torso gets bigger
            elseif part.Name:lower():find("leg") or part.Name:lower():find("arm") then
                scaleMultiplier = 1.6 -- Limbs get slightly less enlargement
            end
            
            local tween = TweenService:Create(part, TweenInfo.new(1, Enum.EasingStyle.Quad), {
                Size = part.Size * scaleMultiplier
            })
            tween:Play()
        end
    end

    -- Visual feedback
    EnlargeButton.Text = "ENLARGED!"
    
    -- Add floating tag (like in your reference images)
    local tag = Instance.new("BillboardGui")
    tag.Size = UDim2.new(0, 200, 0, 50)
    tag.StudsOffset = Vector3.new(0, 3, 0)
    tag.Adornee = heldPet.Handle
    tag.AlwaysOnTop = true
    tag.Parent = heldPet
    
    local tagText = Instance.new("TextLabel")
    tagText.Size = UDim2.new(1, 0, 1, 0)
    tagText.BackgroundTransparency = 1
    tagText.Text = "ENLARGED!"
    tagText.TextColor3 = Color3.fromRGB(0, 255, 255)
    tagText.Font = Enum.Font.SciFi
    tagText.TextSize = 24
    tagText.TextStrokeTransparency = 0.5
    tagText.Parent = tag

    -- Reset after 10 seconds
    task.delay(10, function()
        -- Return to normal size
        for part, size in pairs(originalSizes) do
            if part and part.Parent then
                local tween = TweenService:Create(part, TweenInfo.new(1), {
                    Size = size
                })
                tween:Play()
            end
        end
        
        -- Cleanup
        if tag then tag:Destroy() end
        EnlargeButton.Text = "ENLARGE"
    end)
end

-- Connect button
EnlargeButton.MouseButton1Click:Connect(enlargeHeldPet)

-- Make UI draggable
local dragging = false
local dragInput, dragStart, startPos

MainFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = MainFrame.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

MainFrame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)

game:GetService("UserInputService").InputChanged:Connect(function(input)
    if dragging and input == dragInput then
        local delta = input.Position - dragStart
        MainFrame.Position = startPos + UDim2.new(0, delta.X, 0, delta.Y)
    end
end)

print("Simple Pet Enlarger loaded!")
