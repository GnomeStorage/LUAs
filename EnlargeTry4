-- Delta Executor Compatible: Enlarge Held Pet Script

local scale = 3  -- Scaling factor for enlarging the pet

-- Ensure player character is loaded
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

-- Check for the held pet in the character (RightHand or LeftHand)
local rightHand = character:FindFirstChild("RightHand")
local leftHand = character:FindFirstChild("LeftHand")

local heldPet = nil

-- Try to find the pet in either the right or left hand
if rightHand and rightHand:FindFirstChild("Pet") then
    heldPet = rightHand.Pet
elseif leftHand and leftHand:FindFirstChild("Pet") then
    heldPet = leftHand.Pet
end

if not heldPet then
    print("No pet is being held.")
    return
end

-- Scale the held pet if it is a Model
if heldPet:IsA("Model") then
    if heldPet.PrimaryPart then
        -- Scale each part of the pet model
        for _, part in ipairs(heldPet:GetDescendants()) do
            if part:IsA("BasePart") then
                part.Size = part.Size * scale
                part.Position = part.Position * 1.1  -- Optional: adjust position to avoid clipping
            elseif part:IsA("SpecialMesh") then
                part.Scale = part.Scale * scale
            end
        end
        -- Ensure the pet's PrimaryPart is updated properly after scaling
        heldPet:SetPrimaryPartCFrame(heldPet.PrimaryPart.CFrame)
        print("Pet enlarged!")
    else
        print("Held pet doesn't have a PrimaryPart.")
    end
else
    print("Held object is not a pet model.")
end
